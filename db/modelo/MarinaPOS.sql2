CREATE EXTENSION IF NOT EXISTS citext;
CREATE EXTENSION IF NOT EXISTS plv8;
CREATE EXTENSION IF NOT EXISTS fuzzystrmatch;

DROP SCHEMA "inventario" CASCADE;
DROP SCHEMA "contabilidad" CASCADE;
DROP SCHEMA "usuarios" CASCADE;
DROP SCHEMA "public" CASCADE;

CREATE SCHEMA IF NOT EXISTS "inventario"
AUTHORIZATION farmacia;
CREATE SCHEMA IF NOT EXISTS "contabilidad"
AUTHORIZATION farmacia;
CREATE SCHEMA IF NOT EXISTS "usuarios"
AUTHORIZATION farmacia;
CREATE SCHEMA IF NOT EXISTS "public"
AUTHORIZATION farmacia;

CREATE TYPE "tipo_pago" AS ENUM('EFECTIVO',
'TARJETA',
'TRANSFERENCIA');

CREATE TYPE "unidad_medida" AS ENUM('100 G',
'100 ML',
'DOSIS',
'UNIDAD');

CREATE TYPE "estado_documento" AS ENUM('INVALIDO',
'COTIZANDO',
'PAGANDO',
'FINALIZADO',
'ANULADO');

CREATE TYPE "tipo_documento" AS ENUM('COTIZACION',
'BOLETA',
'FACTURA',
'NOTA CREDITO',
'RETIRO');

CREATE TYPE "tipo_receta" AS ENUM('RMRSCS',
'MRE',
'NP',
'APR',
'WP',
'RMRCCS',
'RCH');

CREATE TYPE "estado_movimiento" AS ENUM('COTIZANDO',
'CORRECTO',
'PENDIENTE',
'ANULADO',
'CANCELADO');

CREATE TYPE "tipo_movimiento" AS ENUM('VENTA',
'COMPRA');

CREATE TYPE "tipo_persona" AS ENUM('INTERNO',
'CLIENTE',
'TRANSFERENCIA');

CREATE TYPE "tipo_usuario" AS ENUM('VENDEDORES',
'JEFES',
'ACCESO_TOTAL');

CREATE DOMAIN "positivo0" integer CONSTRAINT pk_120056 CHECK(VALUE >= 0)

CREATE DOMAIN "positivo1" integer CONSTRAINT pk_145499 CHECK(VALUE > 0)

CREATE DOMAIN "email" text CONSTRAINT pk_103911 CHECK ( value ~ '^[a-zA-Z0-9.!#$%&''*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$' )

CREATE DOMAIN "tipo_precio_producto" integer CONSTRAINT pk_132797 CHECK(VALUE % 100 = 0)

CREATE DOMAIN "tipo_monto_retiro" integer CONSTRAINT pk_104149 CHECK(VALUE % 10000 = 0)

CREATE TABLE "inventario"."categoria_farmacologica"("categoria_farmacologica_id" serial NOT NULL, "nombre" text NOT NULL, CONSTRAINT pk_104863 PRIMARY KEY("categoria_farmacologica_id"));

CREATE TABLE "usuarios"."cliente"("cliente_id" integer NOT NULL, "apodo" text, "comentarios" text, CONSTRAINT pk_136090 PRIMARY KEY("cliente_id"));

CREATE TABLE "inventario"."codigo_de_barras"("codigo_de_barras_id" character varying(24) NOT NULL, "producto_id" integer NOT NULL, "laboratorio_id" integer NOT NULL, "ultimo_movimiento_salida_id" integer NOT NULL, "ultimo_movimiento_entrada_id" integer NOT NULL, "reg_isp" character varying(10), "es_generico" boolean, "es_cenabast" boolean, "es_bioequivalente" boolean, "miligramos_peso" "positivo1", "precio" "tipo_precio_producto", CONSTRAINT pk_141488 PRIMARY KEY("codigo_de_barras_id"));

  CREATE INDEX "codigo_de_barras_ix_1" ON "inventario"."codigo_de_barras"("producto_id");

CREATE TABLE "comentario"("tabla" name NOT NULL, "objeto_id" integer NOT NULL, "momento" timestamp NOT NULL DEFAULT now(), "comentario" text NOT NULL, CONSTRAINT pk_122951 PRIMARY KEY("tabla", "objeto_id"));

  CREATE INDEX "comentario_momento_idx" ON "comentario"("momento" DESC);

CREATE TABLE "contabilidad"."detalle_factura_recepcion"("detalle_factura_recepcion_id" serial NOT NULL, "factura_recepcion_id" integer NOT NULL, "producto_id" integer NOT NULL, "movimiento_id" integer, "nombre" character varying(64) NOT NULL, "monto_total" "positivo1" NOT NULL, "cantidad_teorico" "positivo1" NOT NULL DEFAULT 1, "cantidad_fisico" "positivo0" NOT NULL, "codigo_del_proveedor" character varying(64), CONSTRAINT pk_104443 PRIMARY KEY("detalle_factura_recepcion_id"));

CREATE TABLE "contabilidad"."documento"("documento_id" serial NOT NULL, "turno_id" integer NOT NULL, "cliente_id" integer NOT NULL, "momento" timestamp NOT NULL DEFAULT NOW(), "total_documento" "positivo1" NOT NULL, "comentario" text, "tipo_documento" "tipo_documento" NOT NULL, "estado_documento" "estado_documento" NOT NULL, CONSTRAINT pk_182171 PRIMARY KEY("documento_id"));

  CREATE INDEX "documento_momento_idx" ON "contabilidad"."documento"("momento" DESC);

  CREATE INDEX "documento_turno_idx" ON "contabilidad"."documento"("turno_id");

CREATE TABLE "contabilidad"."factura_recepcion"("factura_recepcion_id" serial NOT NULL, "proveedor_id" integer NOT NULL, "usuario_id" integer NOT NULL, "folio" "positivo1", "fecha" date NOT NULL, "monto_total" integer, "raw_xml" xml, "momento" timestamp DEFAULT NOW(), CONSTRAINT pk_149780 PRIMARY KEY("factura_recepcion_id"));

CREATE TABLE "inventario"."forma_farmaceutica"("forma_farmaceutica_id" serial NOT NULL, "nombre" text NOT NULL, "unidad_medida" "unidad_medida" NOT NULL, CONSTRAINT pk_197689 PRIMARY KEY("forma_farmaceutica_id"));

CREATE TABLE "usuarios"."laboratorio"("laboratorio_id" serial NOT NULL, "nombre" character varying(20) NOT NULL, CONSTRAINT pk_160321 PRIMARY KEY("laboratorio_id"));

CREATE TABLE "momento"("tabla" name NOT NULL, "objeto_id" integer NOT NULL, "momento" timestamp NOT NULL DEFAULT NOW(), CONSTRAINT pk_101970 PRIMARY KEY("tabla", "objeto_id"));

  CREATE INDEX "momento_momento_idx" ON "momento"("momento" DESC);

CREATE TABLE "inventario"."movimiento"("movimiento_id" serial NOT NULL, "producto_id" integer NOT NULL, "usuario_id" integer NOT NULL, "documento_id" integer NOT NULL, "turno_id" integer NOT NULL, "momento" timestamp NOT NULL DEFAULT NOW(), "producto_precio" "positivo1" NOT NULL, "producto_costo" "positivo1" NOT NULL, "precio_efectivo" "tipo_precio_producto" NOT NULL, "cantidad" "positivo1" NOT NULL CHECK ( cantidad > 0), "ultimo_precio" "positivo1" NOT NULL, "es_salida" boolean NOT NULL, "estado_movimiento" "estado_movimiento" NOT NULL, "tipo_movimiento" "tipo_movimiento" NOT NULL, CONSTRAINT pk_146053 PRIMARY KEY("movimiento_id"));

CREATE TABLE "contabilidad"."pago"("pago_id" serial NOT NULL, "turno_id" integer NOT NULL, "documento_id" integer NOT NULL, "monto" "positivo1" NOT NULL, "tipo_pago" "tipo_pago" NOT NULL, CONSTRAINT pk_158318 PRIMARY KEY("pago_id"));

CREATE TABLE "contabilidad"."pedido"("pedido_id" serial NOT NULL, "turno_id" integer NOT NULL, "usuario_id" integer NOT NULL, "producto_id" integer NOT NULL, "producto_nombre" character varying(64) NOT NULL, "listo" boolean NOT NULL, "momento" timestamp NOT NULL DEFAULT NOW(), "cantidad" "positivo1", CONSTRAINT pk_151480 PRIMARY KEY("pedido_id"));

CREATE TABLE "usuarios"."persona"("persona_id" serial NOT NULL, "responsable" integer NOT NULL, "nombre_apellido" character varying(64), "email" "email", "apodo" character varying(16) NOT NULL, "direccion" character varying(80), "momento" timestamp DEFAULT NOW(), "telefonos" character varying(18)[], CONSTRAINT pk_156511 PRIMARY KEY("persona_id"));

CREATE TABLE "inventario"."principio_activo"("principio_activo_id" serial NOT NULL, "nombre" text NOT NULL, CONSTRAINT pk_107119 PRIMARY KEY("principio_activo_id"));

CREATE TABLE "contabilidad"."producto"("producto_id" serial NOT NULL, "nombre" character varying(64) NOT NULL, "categoria_farmacologica_id" integer, "forma_farmaceutica_id" integer, "principio_activo_id" integer, "es_controlado" boolean, "es_refrigerado" boolean, "es_generico" boolean, "cantidad_por_envase" "positivo1", "tipo_receta" "tipo_receta", "precio_defecto" "tipo_precio_producto", CONSTRAINT pk_157945 PRIMARY KEY("producto_id"));

CREATE TABLE "contabilidad"."producto_precio"("producto_precio_id" serial NOT NULL, "turno_id" integer NOT NULL, "usuario_id" integer NOT NULL, "codigo_de_barras_id" character varying(24) NOT NULL, "movimiento_movimiento_id" integer, "momento" timestamp NOT NULL DEFAULT NOW(), "precio" "tipo_precio_producto" NOT NULL, "es_automatico" bool NOT NULL DEFAULT TRUE, "es_precio_compra" bool NOT NULL, CONSTRAINT pk_157971 PRIMARY KEY("producto_precio_id"));

  CREATE UNIQUE INDEX "timestamp_y_producto" ON "contabilidad"."producto_precio"("momento" DESC, "codigo_de_barras_id", "es_precio_compra");

CREATE TABLE "usuarios"."proveedores"("proveedor_id" serial NOT NULL, "cuenta_pagos" text, CONSTRAINT pk_195639 PRIMARY KEY("proveedor_id"));

CREATE TABLE "contabilidad"."retiro"("id" serial NOT NULL, "usuario_id" integer NOT NULL, "documento_id" integer NOT NULL, "turno_id" integer NOT NULL, "monto" "tipo_monto_retiro" NOT NULL, "momento" timestamp NOT NULL DEFAULT NOW(), CONSTRAINT pk_192219 PRIMARY KEY("id"));

  CREATE UNIQUE INDEX "retiro_ix_1" ON "contabilidad"."retiro"("momento" DESC);

CREATE TABLE "contabilidad"."turno"("turno_id" serial NOT NULL, "usuario_id" integer NOT NULL, "momento" timestamp NOT NULL DEFAULT NOW(), "monto_caja_inicial" integer NOT NULL, "ultimo_movimiento" timestamp, "monto_caja_final" integer, "monto_caja_final_real" integer, CONSTRAINT pk_158929 PRIMARY KEY("turno_id"));

  CREATE UNIQUE INDEX "momento_turno_idx" ON "contabilidad"."turno"("momento");

CREATE TABLE "usuarios"."usuario"("usuario_id" integer NOT NULL, "tipo_usuario" "tipo_usuario", CONSTRAINT pk_171270 PRIMARY KEY("usuario_id"));

  CREATE UNIQUE INDEX "usuario_ix_1" ON "usuarios"."usuario";

ALTER TABLE "contabilidad"."documento" ADD CONSTRAINT pk_134929 FOREIGN KEY ("cliente_id") REFERENCES "usuarios"."cliente" ("cliente_id");

ALTER TABLE "contabilidad"."pago" ADD CONSTRAINT pk_197597 FOREIGN KEY ("documento_id") REFERENCES "contabilidad"."documento" ("documento_id");

ALTER TABLE "inventario"."movimiento" ADD CONSTRAINT pk_164034 FOREIGN KEY ("documento_id") REFERENCES "contabilidad"."documento" ("documento_id");

ALTER TABLE "contabilidad"."detalle_factura_recepcion" ADD CONSTRAINT pk_140204 FOREIGN KEY ("factura_recepcion_id") REFERENCES "contabilidad"."factura_recepcion" ("factura_recepcion_id");

ALTER TABLE "contabilidad"."producto" ADD CONSTRAINT pk_199784 FOREIGN KEY ("forma_farmaceutica_id") REFERENCES "inventario"."forma_farmaceutica" ("forma_farmaceutica_id");

ALTER TABLE "contabilidad"."producto" ADD CONSTRAINT pk_148158 FOREIGN KEY ("categoria_farmacologica_id") REFERENCES "inventario"."categoria_farmacologica" ("categoria_farmacologica_id");

ALTER TABLE "contabilidad"."detalle_factura_recepcion" ADD CONSTRAINT pk_129584 FOREIGN KEY ("movimiento_id") REFERENCES "inventario"."movimiento" ("movimiento_id");

ALTER TABLE "contabilidad"."producto" ADD CONSTRAINT pk_174477 FOREIGN KEY ("principio_activo_id") REFERENCES "inventario"."principio_activo" ("principio_activo_id");

ALTER TABLE "contabilidad"."detalle_factura_recepcion" ADD CONSTRAINT pk_156948 FOREIGN KEY ("producto_id") REFERENCES "contabilidad"."producto" ("producto_id");

ALTER TABLE "inventario"."movimiento" ADD CONSTRAINT pk_120553 FOREIGN KEY ("producto_id") REFERENCES "contabilidad"."producto" ("producto_id");

ALTER TABLE "contabilidad"."pedido" ADD CONSTRAINT pk_118236 FOREIGN KEY ("producto_id") REFERENCES "contabilidad"."producto" ("producto_id");

ALTER TABLE "inventario"."codigo_de_barras" ADD CONSTRAINT pk_107948 FOREIGN KEY ("producto_id") REFERENCES "contabilidad"."producto" ("producto_id");

ALTER TABLE "contabilidad"."factura_recepcion" ADD CONSTRAINT pk_175740 FOREIGN KEY ("proveedor_id") REFERENCES "usuarios"."proveedores" ("proveedor_id");

ALTER TABLE "contabilidad"."documento" ADD CONSTRAINT pk_152913 FOREIGN KEY ("turno_id") REFERENCES "contabilidad"."turno" ("turno_id");

ALTER TABLE "inventario"."movimiento" ADD CONSTRAINT pk_184520 FOREIGN KEY ("turno_id") REFERENCES "contabilidad"."turno" ("turno_id");

ALTER TABLE "contabilidad"."producto_precio" ADD CONSTRAINT pk_117766 FOREIGN KEY ("turno_id") REFERENCES "contabilidad"."turno" ("turno_id");

ALTER TABLE "contabilidad"."pago" ADD CONSTRAINT pk_179732 FOREIGN KEY ("turno_id") REFERENCES "contabilidad"."turno" ("turno_id");

ALTER TABLE "contabilidad"."pedido" ADD CONSTRAINT pk_180644 FOREIGN KEY ("turno_id") REFERENCES "contabilidad"."turno" ("turno_id");

ALTER TABLE "contabilidad"."factura_recepcion" ADD CONSTRAINT pk_178049 FOREIGN KEY ("usuario_id") REFERENCES "usuarios"."usuario" ("usuario_id");

ALTER TABLE "contabilidad"."turno" ADD CONSTRAINT pk_129712 FOREIGN KEY ("usuario_id") REFERENCES "usuarios"."usuario" ("usuario_id");

ALTER TABLE "inventario"."codigo_de_barras" ADD CONSTRAINT pk_104301 FOREIGN KEY ("laboratorio_id") REFERENCES "usuarios"."laboratorio" ("laboratorio_id");

ALTER TABLE "inventario"."movimiento" ADD CONSTRAINT pk_105904 FOREIGN KEY ("usuario_id") REFERENCES "usuarios"."usuario" ("usuario_id");

ALTER TABLE "inventario"."codigo_de_barras" ADD CONSTRAINT pk_162654 FOREIGN KEY ("ultimo_movimiento_salida_id") REFERENCES "inventario"."movimiento" ("movimiento_id");

ALTER TABLE "inventario"."codigo_de_barras" ADD CONSTRAINT pk_126733 FOREIGN KEY ("ultimo_movimiento_entrada_id") REFERENCES "inventario"."movimiento" ("movimiento_id");

ALTER TABLE "contabilidad"."producto_precio" ADD CONSTRAINT pk_134274 FOREIGN KEY ("codigo_de_barras_id") REFERENCES "inventario"."codigo_de_barras" ("codigo_de_barras_id");

ALTER TABLE "contabilidad"."producto_precio" ADD CONSTRAINT pk_137453 FOREIGN KEY ("usuario_id") REFERENCES "usuarios"."usuario" ("usuario_id");

ALTER TABLE "contabilidad"."producto_precio" ADD CONSTRAINT pk_153535 FOREIGN KEY ("movimiento_movimiento_id") REFERENCES "inventario"."movimiento" ("movimiento_id");

ALTER TABLE "usuarios"."usuario" ADD CONSTRAINT pk_178080 FOREIGN KEY ("usuario_id") REFERENCES "usuarios"."persona" ("persona_id");

ALTER TABLE "usuarios"."cliente" ADD CONSTRAINT pk_140617 FOREIGN KEY ("cliente_id") REFERENCES "usuarios"."persona" ("persona_id");

ALTER TABLE "usuarios"."proveedores" ADD CONSTRAINT pk_175772 FOREIGN KEY ("proveedor_id") REFERENCES "usuarios"."persona" ("persona_id");

ALTER TABLE "contabilidad"."retiro" ADD CONSTRAINT pk_153407 FOREIGN KEY ("usuario_id") REFERENCES "usuarios"."usuario" ("usuario_id");

ALTER TABLE "contabilidad"."retiro" ADD CONSTRAINT pk_108985 FOREIGN KEY ("documento_id") REFERENCES "contabilidad"."documento" ("documento_id");

ALTER TABLE "contabilidad"."retiro" ADD CONSTRAINT pk_199746 FOREIGN KEY ("turno_id") REFERENCES "contabilidad"."turno" ("turno_id");

ALTER TABLE "usuarios"."persona" ADD CONSTRAINT pk_122246 FOREIGN KEY ("responsable") REFERENCES "usuarios"."usuario" ("usuario_id");

ALTER TABLE "contabilidad"."pedido" ADD CONSTRAINT pk_182921 FOREIGN KEY ("usuario_id") REFERENCES "usuarios"."usuario" ("usuario_id");
